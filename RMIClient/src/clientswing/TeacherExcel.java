/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package clientswing;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import common.AddI;
import common.AddO;
import pojo.Paperreg;
import pojo.ServerList;
import pojo.Subteacher;
import pojo.Teacherreg;

/**
 *
 * @author naruto
 */
public class TeacherExcel extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form NewJFrame
     */
	List<Object> result = null;
	String[] subjects = null;
	Teacherreg user = null;
	private String selectedSubject;
	private AddI serverObj;
	
	public AddO server1, server2;

	public TeacherExcel(List<Object> result, Teacherreg user, AddI serverObj, AddO server1, AddO server2) {
		this.result = result;
		this.user = user;
		this.server1 = server1;
		this.server2 = server2;
		this.serverObj = serverObj;
		this.subjects = new String[this.result.size() + 1];
		this.subjects[0] = "----------";
		for (int i = 1; i <= result.size(); i++) {
			subjects[i] = "Paper Id:"+ Integer.toString(((Paperreg) result.get(i - 1)).getPid())+"Sub Id:"+Integer.toString(((Paperreg) result.get(i - 1)).getSubid());

		}
		initComponents();
                setTitle("WELCOME TO ONLINE QUIZ SYSTEM ");
		Submit.addActionListener(this);
	
	}
	

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        User = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        Submit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        User.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        User.setText("username");

        back.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel1.setText("Subject:");

        jComboBox1.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(subjects));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        Submit.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel3.setText(user.getTname());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 105, Short.MAX_VALUE)
                            .addComponent(User, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(191, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel3});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {User, jComboBox1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(User)
                    .addComponent(jLabel3))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back)
                    .addComponent(Submit))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel3});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {User, jComboBox1});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
      
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
         String str = JOptionPane.showInputDialog(this, "Enter file name eg. ABC.xlsx: ");
 		// TODO check xlsx
 		System.out.println("Hello in action");
 		URL url = null;
 		
 		boolean flag = true;

 		String result = "";
 		// RMI CALL
 		if( jComboBox1.getSelectedIndex()<1) {
 			JOptionPane.showMessageDialog(this, "Please Select a option");
 		}else {
 		int index  = jComboBox1.getSelectedIndex()-1;
 		while (flag) {

 			try {
 				Integer subid = ((Paperreg)this.result.get(index)).getSubid();
 				Integer pid = ((Paperreg)this.result.get(index)).getPid();
 				
 				try{result = this.serverObj.getUrlTeacher(pid,subid);}catch(NullPointerException exxx){
 					System.out.println("No Paper to add to excel");
 				}
 				System.out.println("making call");
 				flag = false;

 			} catch (Exception ee) {
 				System.out.println("will get new serverobject and the recall the function again");
 				ServerList serving = null;
 				try {
 					System.out.println("Calling server");
 					serving = server1.giveServer();
 					System.out.println("After call server");

 				} catch (Exception ex) {
 					System.err.println("Server1 failed to give server calling server2");
 					try {
 						serving = server2.giveServer();
 					} catch (Exception ex2) {
 						// TODO EXIT POPUP
 						JOptionPane.showMessageDialog(this,"No server to serve at this moment try again Later");

 						System.err.println("NO SERVER TO SERVE");
 						// TODO ADD OPOP
 						System.exit(1);
 					}
 				}
 				//
 				System.out.println("Getting new server obj");
 				this.serverObj = null;

 				try {
 					Registry registrymain = LocateRegistry.getRegistry(serving.getMainIP(), serving.getMainPORT());
 					this.serverObj = (AddI) registrymain.lookup(serving.getMainOBJ());
 				} catch (Exception exxs) {
 					// TODO: handle exception
 				}
 			}
 		}
 		if(result!=null) {
 		// TODO CALL SERVER FOR URL
 		try {
 			url = new URL(result);
 		} catch (MalformedURLException e2) {
 			// TODO Auto-generated catch block
 			e2.printStackTrace();
 		}
 		File f = new File(str);
 		try {
 			org.apache.commons.io.FileUtils.copyURLToFile(url, f);
 		} catch (IOException e1) {
 			// TODO Auto-generated catch block
 			e1.printStackTrace();
 		}
 		JOptionPane.showMessageDialog(this, "File downloaded: Going to home ");
 		parent.setVisible(true);
 		this.dispose();}else {
 			JOptionPane.showMessageDialog(this, "No Result to Download: Going to home ");
 		}}
 		//
 		//
    }//GEN-LAST:event_SubmitActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
    	parent.setVisible(true);
 		this.dispose();
       
    }//GEN-LAST:event_backActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
              parent.setVisible(true);
		this.dispose();
    }//GEN-LAST:event_formWindowClosing

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Submit;
    private javax.swing.JLabel User;
    private javax.swing.JButton back;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
    private JFrame parent;
   
    public void setParentFrame(JFrame f){
        parent = f;
    }
    @Override
    public void actionPerformed(ActionEvent e) {
    
    
    
    
    
    
    
    
    
    }




}
