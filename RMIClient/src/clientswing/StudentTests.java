package clientswing;

import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;

import common.AddI;
import common.AddO;
import pojo.Paperreg;
import pojo.ServerList;
import pojo.Studentreg;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author naruto
 */
public class StudentTests extends javax.swing.JFrame implements ActionListener {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	Timer tr;
	private AddI serverObj;
	private Studentreg User;
	private List<Object> papers;

    // Variables declaration - do not modify//GEN-BEGIN:variables
   // private javax.swing.JButton back;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton logout;
    private java.awt.Panel panel1;
    private javax.swing.JButton resultsubmit;
    private javax.swing.JButton srttest;
    private javax.swing.JLabel timer;
    private javax.swing.JLabel username;
    private javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
	private JFrame child;
	/**
	 * Creates new form choosetest
	 * 
	 * @param serverObj
	 * @param papers
	 * @param server2
	 * @param server
	 * @param user
	 */
	AddO server1;
	AddO server2;
	String[] TestList;

	public StudentTests(AddI serverObj, Studentreg User, List<Object> papers, AddO server1, AddO server2) {
		this.serverObj = serverObj;
		this.User = User;
		this.papers = papers;
		this.server1 = server1;
		this.server2 = server2;
		// System.out.println(this.papers.size());
		this.TestList = new String[this.papers.size() + 1];
		this.TestList[0] = "----";
		for (int i = 1; i <= this.papers.size(); i++) {
			this.TestList[i] = "Sub:" + Integer.toString(((Paperreg) this.papers.get(i - 1)).getSubid()) + "Paper:"
					+ Integer.toString(((Paperreg) this.papers.get(i - 1)).getPid());
		}

		initComponents();
		   setTitle("WELCOME TO ONLINE QUIZ SYSTEM ");
		showTime();
		tr = new Timer(1000, this);
		tr.start();

	}
//	public void setChild(JFrame child) {
//        this.child = child;
//    }
	@Override
	public void actionPerformed(ActionEvent e) {

		if (e.getSource() == tr) {
			showTime();
		}
		// jLabel2.setText("Available test for you:");
		/*
		 * if(e.getActionCommand().equals("myButton"))//here lable3 is student name {
		 * username.setText(studentname.getText()); }
		 */
		// String str = "string of student name ";
		// username.setText(str);

	}

	private void formWindowClosing(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowClosing
		// TODO add your handling code here:
		this.dispose();
	}

	// GEN-LAST:event_formWindowClosing
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        logout = new javax.swing.JButton();
        welcome = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        timer = new javax.swing.JLabel();
        srttest = new javax.swing.JButton();
        resultsubmit = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        //back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        logout.setText("logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        welcome.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        welcome.setText("Username:");

        username.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        username.setText(this.User.getSname());

        timer.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        timer.setText("timecounter\n");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addComponent(timer)
                        .addContainerGap())))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(welcome)
                            .addComponent(username)))
                    .addComponent(timer))
                .addGap(18, 18, 18)
                .addComponent(logout))
        );

        welcome.getAccessibleContext().setAccessibleName("Welcome");

        srttest.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        srttest.setText("Submit");
        srttest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srttestActionPerformed(evt);
            }
        });

        resultsubmit.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        resultsubmit.setText("Submit");
        resultsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultsubmitActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(TestList));

        jComboBox2.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(TestList));

        jLabel1.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel1.setText("Available Test For You:");

        jLabel3.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel3.setText("Available Result For You:");

       // back.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        //back.setText("Back");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                   // .addComponent(back)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resultsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(srttest, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 178, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jComboBox1, jComboBox2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {resultsubmit, srttest});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srttest))
                .addGap(119, 119, 119)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultsubmit))
                .addGap(37, 37, 37)
                //.addComponent(back)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBox1, jComboBox2});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] { resultsubmit, srttest});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel3});

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void srttestActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_resultsubmitActionPerformed
		if (jComboBox1.getSelectedIndex() == 0) {
			JOptionPane.showMessageDialog(this, "Please Select Subject", "Notice", JOptionPane.WARNING_MESSAGE);

		} else {
			Paperreg selectedpaper = (Paperreg) this.papers.get(jComboBox1.getSelectedIndex() - 1);
			Instrupasskey f = new Instrupasskey(serverObj, User, selectedpaper, server1, server2);
			f.setLocationRelativeTo(null);
			f.setVisible(true);
			f.setParentFrame(this);
			f.setExtendedState(Frame.MAXIMIZED_BOTH);
			this.setVisible(false);
		}
	}// GEN-LAST:event_resultsubmitActionPerformed

	private void resultsubmitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_resultsubmitActionPerformed
		if (jComboBox2.getSelectedIndex() == 0) {
			JOptionPane.showMessageDialog(this, "Please Select Result", "Notice", JOptionPane.WARNING_MESSAGE);

		} else {
			Paperreg selectedpaper = (Paperreg) this.papers.get(jComboBox2.getSelectedIndex() - 1);
		
			  String str = JOptionPane.showInputDialog(this, "Enter file name eg. ABC.xlsx: ");
		 		// TODO check xlsx
		 		System.out.println("Hello in action");
		 		URL url = null;
		 		
		 		boolean flag = true;
		 
		 		String result = "";
		 		// RMI CALL
		 			int index  = jComboBox2.getSelectedIndex()-1;
		 		while (flag) {

		 			try {
		 				Integer subid = selectedpaper.getSubid();
		 				Integer pid = selectedpaper.getPid();
		 				try {
		 				result = this.serverObj.getUrlStudent(pid,subid,this.User.getSid());
		 				}catch(NullPointerException exxz) {
		 					exxz.printStackTrace();
		 					
		 				}
		 				System.out.println("making call");
		 				flag = false;

		 			} catch (Exception ee) {
		 				System.out.println("will get new serverobject and the recall the function again");
		 				ServerList serving = null;
		 				try {
		 					System.out.println("Calling server");
		 					serving = server1.giveServer();
		 					System.out.println("After call server");

		 				} catch (Exception ex) {
		 					System.err.println("Server1 failed to give server calling server2");
		 					try {
		 						serving = server2.giveServer();
		 					} catch (Exception ex2) {
		 						// TODO EXIT POPUP
		 						JOptionPane.showMessageDialog(this,"No server to serve at this moment try again Later");

		 						System.err.println("NO SERVER TO SERVE");
		 						// TODO ADD OPOP
		 						System.exit(1);
		 					}
		 				}
		 				//
		 				System.out.println("Getting new server obj");
		 				this.serverObj = null;

		 				try {
		 					Registry registrymain = LocateRegistry.getRegistry(serving.getMainIP(), serving.getMainPORT());
		 					this.serverObj = (AddI) registrymain.lookup(serving.getMainOBJ());
		 				} catch (Exception exxs) {
		 					// TODO: handle exception
		 				}
		 			}
		 		}
		 		if(result!=null) {
		 		// TODO CALL SERVER FOR URL
		 		try {
		 			url = new URL(result);
		 		} catch (MalformedURLException e2) {
		 			// TODO Auto-generated catch block
		 			e2.printStackTrace();
		 		}
		 		File f = new File(str);
		 		try {
		 			org.apache.commons.io.FileUtils.copyURLToFile(url, f);
		 		} catch (IOException e1) {
		 			// TODO Auto-generated catch block
		 			e1.printStackTrace();
		 		}JOptionPane.showMessageDialog(this, "File downloaded");
		 		}
		else {
			JOptionPane.showMessageDialog(this, "No File to Downloaded");
		}
			
		}
			
		
	}// GEN-LAST:event_resultsubmitActionPerformed

	private void logoutActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_logoutActionPerformed
	
		MainFrame f = new MainFrame(serverObj,server1,server2,true); f.setLocationRelativeTo(null);
		f.setLocationRelativeTo(null);
		f.setVisible(true);
		f.setExtendedState(MAXIMIZED_BOTH);
		dispose();
	}// GEN-LAST:event_logoutActionPerformed

	public void setChild(JFrame child) {
		this.child = child;
	}

	void showTime() {
		Date d = new Date();
		SimpleDateFormat fmt = new SimpleDateFormat("hh:mm:ss a");
		String str = fmt.format(d);
		timer.setText(str);
	}

	private void testsActionPerformed(java.awt.event.ActionEvent evt) {

		// GEN-FIRST:event_jframe1ActionPerformed
		// // TODO add your handling code here:
		// // Questionpanel f = new Questionpanel(serverObj);
		// // f.setExtendedState(JFrame.MAXIMIZED_BOTH);
		// //String s = new String((String) evt.getSource());
		// Paperreg selectedpaper = (Paperreg) papers.get(0);
		// Instrupasskey f = new Instrupasskey(serverObj, User,
		// selectedpaper,this.server,this.server2);
		// f.setLocationRelativeTo(null);
		// f.setVisible(true);
		// f.setExtendedState(Frame.MAXIMIZED_BOTH);
		// // f.setLocationRelativeTo(null);
		// // f.setParentFrame(this);
		// // f.setVisible(true);
		// this.setVisible(false);
	}// GEN-LAST:event_jframe1ActionPerformed
}
